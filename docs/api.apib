FORMAT: 1A
HOST: https://directory.service.toshi.org

# Toshi Directory Service

This service stores Token Apps with all the required metadata to construct SOFA App Manifests for them. It provides index, curation, and search functionalities.


# Group Apps
## App Index [/v1/apps/]
+ Parameters
    + offset: `80` (integer, optional) - Paging offset
      + Default: `0`
    + limit: `20` (integer, optional) - Page size
      + Default: `10`
    + featured: `true` (boolean, optional) - Only return featured things
      + Default: `false`

### Fetch list of apps [GET]
+ Response 200 (application/json)
  + Body
    {
      "offset": 0,
      "query": "",
      "limit": 10,
      "total": 100,
      "featured": false,
      "apps": [
        {
	  "token_id": "0x2a7f5bfe1c61c752e1cc668661f07804006678b1",
	  "reputation_score": 3.5,
	  "review_count": 10,
	  "username": "testingbot",
	  "is_app": true,
	  "payment_address": "0x2a7f5bfe1c61c752e1cc668661f07804006678b1",
          "name": "TestingBot",
          "avatar": "https://token-id-service.herokuapp.com/identicon/0x2a7f5bfe1c61c752e1cc668661f07804006678b1.png",
          "about": "..."
        },
	...
      ]
    }

## App Index [/v1/apps/featured]
+ Parameters
    + offset: `80` (integer, optional) - Paging offset
      + Default: `0`
    + limit: `20` (integer, optional) - Page size
      + Default: `10`

### Fetch list of featured apps [GET]
+ Response 200 (application/json)
  + Body
    {
      "offset": 0,
      "query": "",
      "limit": 10,
      "total": 100,
      "featured": true,
      "apps": [
        {
	  "token_id": "0x2a7f5bfe1c61c752e1cc668661f07804006678b1",
	  "reputation_score": 3.5,
	  "review_count": 10,
	  "username": "testingbot",
	  "is_app": true,
	  "payment_address": "0x2a7f5bfe1c61c752e1cc668661f07804006678b1",
          "name": "TestingBot",
          "avatar": "https://token-id-service.herokuapp.com/identicon/0x2a7f5bfe1c61c752e1cc668661f07804006678b1.png",
          "about": "..."
        },

	...
      ]
    }


## App [/v1/apps/{token_id}]
+ Parameters
    + token_id: 1 (required, string) - token id of the app

### Get app [GET]
+ Response 200 (application/json)
  + Body
      {
	  "token_id": "0x2a7f5bfe1c61c752e1cc668661f07804006678b1",
	  "reputation_score": 3.5,
	  "review_count": 10,
	  "username": "testingbot",
	  "is_app": true,
	  "payment_address": "0x2a7f5bfe1c61c752e1cc668661f07804006678b1",
          "name": "TestingBot",
          "avatar": "https://token-id-service.herokuapp.com/identicon/0x2a7f5bfe1c61c752e1cc668661f07804006678b1.png",
          "about": "..."
      }

+ Response 404 (application/json)

        {
            "errors": [
                {
                    "id": "not_found",
                    "message": "Not found"
                }
        }

# Group Search
## Apps [/v1/search/apps/{?query,offset,limit}]
### Search by partial username [GET]
+ Parameters
    + query: `ether` (string, required) - Partial username to match on
      Matches on usernames using Postgres ILIKE operator
    + offset: `80` (integer, optional) - Paging offset
      + Default: `0`
    + limit: `20` (integer, optional) - Page size
      + Default: `10`
    + featured: `true` (boolean, optional) - Only return featured things
      + Default: `false`

+ Response 200 (application/json)
  + Body
    {
      "offset": 0,
      "total": 1,
      "query": "ether",
      "featured": false,
      "apps": [
        {
	  "token_id": "0x2a7f5bfe1c61c752e1cc668661f07804006678b1",
	  "reputation_score": 3.5,
	  "review_count": 10,
	  "username": "testingbot",
	  "is_app": true,
	  "payment_address": "0x2a7f5bfe1c61c752e1cc668661f07804006678b1",
          "name": "TestingBot",
          "avatar": "https://token-id-service.herokuapp.com/identicon/0x2a7f5bfe1c61c752e1cc668661f07804006678b1.png",
          "about": "..."
        },
      ],
      "limit": 1
    }

# Group Sofa Manifest

## Sofa Manifest [/v1/manifest/{token_id}]

### Get Sofa Manifest [GET]

+ Response 200 (application/json)

    + Body

        {
            "languages": [
                "en"
            ],
            "initRequest": {
                "values": [
                    "paymentAddress",
                    "language"
                ]
            },
            "protocol": "sofa-v1.0",
            "interfaces": [
                "ChatBot"
            ],
            "ownerAddress": "0x2a7f5bfe1c61c752e1cc668661f07804006678b1",
            "paymentAddress": "0x2a7f5bfe1c61c752e1cc668661f07804006678b1",
            "avatarUrl": "http://icons.iconarchive.com/icons/martz90/circle/512/app-draw-icon.png",
            "displayName": "TestingBot",
            "webApp": null
        }


# Group Usage Notes
## Errors

All error messages will return both machine (`id`) and human readable (`message`) error message. All errors, except validation_error, return only one error. Some errors will also have an optional link to the documentation (url).

validation_error with status code 400 is returned when the validation of the resource fails on POST or PUT requests. Response contains errors field with a list of errors.

Important: Different error types (id) can be added and removed over time so you should make sure your application accepts new ones as well.

```json
{
  "errors": [
    {
      "id": "not_found",
      "message": "Not found"
    }
  ]
}
```
